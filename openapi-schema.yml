openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/profile/:
    get:
      operationId: listUserProfiles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/authors/:
    get:
      operationId: listAuthors
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
    post:
      operationId: createAuthor
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
  /api/authors/{id}/:
    get:
      operationId: retrieveAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this author.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
    put:
      operationId: updateAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this author.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this author.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this author.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/books/:
    get:
      operationId: listBooks
      description: ''
      parameters:
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: language
        required: false
        in: query
        description: language
        schema:
          type: string
      - name: publish_date
        required: false
        in: query
        description: publish_date
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    post:
      operationId: createBook
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
  /api/books/{id}/:
    get:
      operationId: retrieveBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: language
        required: false
        in: query
        description: language
        schema:
          type: string
      - name: publish_date
        required: false
        in: query
        description: publish_date
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    put:
      operationId: updateBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: language
        required: false
        in: query
        description: language
        schema:
          type: string
      - name: publish_date
        required: false
        in: query
        description: publish_date
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: language
        required: false
        in: query
        description: language
        schema:
          type: string
      - name: publish_date
        required: false
        in: query
        description: publish_date
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: language
        required: false
        in: query
        description: language
        schema:
          type: string
      - name: publish_date
        required: false
        in: query
        description: publish_date
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/subscribers/:
    get:
      operationId: listSubscribers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
          description: ''
      tags:
      - api
    post:
      operationId: createSubscriber
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscriber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscriber'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: ''
      tags:
      - api
  /api/subscribers/{id}/:
    get:
      operationId: retrieveSubscriber
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this subscriber.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: ''
      tags:
      - api
    put:
      operationId: updateSubscriber
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this subscriber.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscriber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscriber'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSubscriber
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this subscriber.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscriber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscriber'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySubscriber
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this subscriber.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/register/:
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/auth/:
    post:
      operationId: createAuthToken
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      tags:
      - api
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 255
        mid_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
      required:
      - first_name
      - mid_name
      - last_name
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        language:
          type: string
          maxLength: 50
        publish_date:
          type: string
          format: date-time
        author:
          type: integer
          nullable: true
      required:
      - name
      - language
      - publish_date
    Subscriber:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 255
        mid_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
      required:
      - first_name
      - mid_name
      - last_name
      - email
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          maxLength: 128
      required:
      - username
      - email
      - password
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - username
      - password
